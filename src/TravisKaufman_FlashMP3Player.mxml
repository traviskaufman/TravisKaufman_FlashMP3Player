<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   applicationComplete="initPlayer();">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			//TODO: Text for title/artist name, song selection buttons, shuffle mode, etc. 
			import flash.events.Event;
			import flash.media.SoundTransform;
			import flash.net.URLLoader;
			import flash.net.URLRequest;
			import flash.xml.*;
			import mp3Player.*;
			
			private var playlist:Array;
			private var payload:XML;
			private var stf:SoundTransform;
			private var idTrack:Number = 0;
			private var xmlSrc:URLLoader;
			
			public function initPlayer():void {
				stf = new SoundTransform();
				xmlSrc = new URLLoader();
				xmlSrc.dataFormat = URLLoaderDataFormat.TEXT;
				xmlSrc.addEventListener(Event.COMPLETE, populatePlaylist);
				xmlSrc.load(new URLRequest("https://files.nyu.edu/tmk272/public/mp3player/a4w_playlist.xml"));
			}
			
			private function populatePlaylist(e:Event):void {
				payload = new XML(xmlSrc.data);
				var _L:Number = payload.child("SONG").length();
				playlist = new Array(_L);
				for (var i:Number = 0; i < _L; i++) {
					var url:String = payload..URL[i];
					var title:String = payload..TITLE[i];
					var artist:String = payload..ARTIST[i];
					playlist[i] = new Song(i, url, title, artist);
				}
			}
			
			public function s_play(inTrack:Number):void {
				idTrack = playlist[idTrack].getID();
				playlist[idTrack].playSong();
				playlist[idTrack].getChannel().soundTransform = stf;
				artistDisplay.text = playlist[idTrack].getArtist();
				titleDisplay.text = playlist[idTrack].getTitle();
				playBtn.enabled = false;
				pauseBtn.enabled = true;
				stopBtn.enabled = true;
			}
			
			public function s_stop():void {
				playlist[idTrack].stopSong();
				stopBtn.enabled = false;
				pauseBtn.enabled = false;
				playBtn.enabled = true;
			}
			
			public function s_pause():void {
				playlist[idTrack].pauseSong();
				pauseBtn.enabled = false;
				playBtn.enabled = true;
			}
			
			public function nextTrack():void {
				if (idTrack < playlist.length - 1) {
					if (playlist[idTrack].getPlayState() == true) {
						playlist[idTrack].stopSong();
						s_play(++idTrack);
					}
					else
						++idTrack;
				}
				else
					s_stop();
			}
			
			public function prevTrack():void {
				if (idTrack > 0) {
					if (playlist[idTrack].getPlayState() == true) {
						playlist[idTrack].stopSong();
						s_play(--idTrack);
					}
					else
						--idTrack;
				}
				else
					s_stop();
			}
		]]>
	</fx:Script>
	
	<s:Button id="playBtn" x="139" y="147" label="Play" click="s_play(idTrack);"/>
	<s:Label id="artistDisplay" x="217" y="176"/>
	<s:Button id="stopBtn" x="295" y="147" label="Stop" click="s_stop();"/>
	<s:Label id="titleDisplay" x="217" y="205"/>
	<s:Button id="nextBtn" x="373" y="147" label="&gt;&gt;" click="nextTrack();"/>
	<s:Button id="prevBtn" x="61" y="147" label="&lt;&lt;" 
			  click="prevTrack();"/>
	<s:Button id="pauseBtn" x="217" y="147" label="Pause" click="s_pause();"/>
</s:Application>
